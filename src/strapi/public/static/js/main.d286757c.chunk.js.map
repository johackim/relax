{"version":3,"sources":["components/App/App.js","index.js"],"names":["OrderRow","_ref","orderId","name","estimateDate","progress","react_default","a","createElement","Table","Row","key","Cell","Date","toLocaleDateString","Progress","percent","indicating","OrderList","state","orders","_this2","this","fetch","method","headers","Content-Type","body","JSON","stringify","query","then","data","json","_ref2","setState","basic","celled","Header","HeaderCell","Body","sort","b","map","order","App_OrderRow","Object","assign","React","Component","App","Container","Divider","hidden","App_OrderList","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"8QAGMA,EAAW,SAAAC,GAA+C,IAA5CC,EAA4CD,EAA5CC,QAASC,EAAmCF,EAAnCE,KAAMC,EAA6BH,EAA7BG,aAAcC,EAAeJ,EAAfI,SAC7C,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAMC,IAAP,CAAWC,IAAKT,GACZI,EAAAC,EAAAC,cAACC,EAAA,EAAMG,KAAP,KACIN,EAAAC,EAAAC,cAAA,SAAIN,IAERI,EAAAC,EAAAC,cAACC,EAAA,EAAMG,KAAP,KAAaT,GACbG,EAAAC,EAAAC,cAACC,EAAA,EAAMG,KAAP,KACK,IAAIC,KAAKT,GAAcU,mBAAmB,KAAM,UAErDR,EAAAC,EAAAC,cAACC,EAAA,EAAMG,KAAP,KACIN,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAUC,QAASX,EAAUA,UAAQ,EAACY,YAAU,OAM1DC,6MACJC,MAAQ,CAAEC,OAAQ,wFAEG,IAAAC,EAAAC,KACjBC,MAAM,WAAY,CACdC,OAAQ,OACRC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBC,MAAO,wDAGVC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAG,GAAA,IAAGF,EAAHE,EAAGF,KAAH,OAAcX,EAAKc,SAAS,CAAEf,OAAQY,EAAKZ,4CAGhD,IACGA,EAAWE,KAAKH,MAAhBC,OAER,OACId,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAO2B,MAAM,OAAOC,QAAM,GACtB/B,EAAAC,EAAAC,cAACC,EAAA,EAAM6B,OAAP,KACIhC,EAAAC,EAAAC,cAACC,EAAA,EAAMC,IAAP,KACIJ,EAAAC,EAAAC,cAACC,EAAA,EAAM8B,WAAP,8BACAjC,EAAAC,EAAAC,cAACC,EAAA,EAAM8B,WAAP,2BACAjC,EAAAC,EAAAC,cAACC,EAAA,EAAM8B,WAAP,qCACAjC,EAAAC,EAAAC,cAACC,EAAA,EAAM8B,WAAP,sBAGRjC,EAAAC,EAAAC,cAACC,EAAA,EAAM+B,KAAP,KACKpB,EACKA,EACGqB,KAAK,SAAClC,EAAGmC,GAAJ,OAAUnC,EAAEF,SAAWqC,EAAErC,WAC9BsC,IAAI,SAAAC,GAAK,OAAItC,EAAAC,EAAAC,cAACqC,EAADC,OAAAC,OAAA,CAAUpC,IAAKiC,EAAM1C,SAAa0C,MAClD,mBAjCAI,IAAMC,WA+CfC,EAPH,kBACR5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,KACI7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAASC,QAAM,IACf/C,EAAAC,EAAAC,cAAC8C,EAAD,eC1DRC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d286757c.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Table, Progress, Divider } from 'semantic-ui-react';\n\nconst OrderRow = ({ orderId, name, estimateDate, progress }) => {\n    return (\n        <Table.Row key={orderId}>\n            <Table.Cell>\n                <b>{orderId}</b>\n            </Table.Cell>\n            <Table.Cell>{name}</Table.Cell>\n            <Table.Cell>\n                {new Date(estimateDate).toLocaleDateString('fr', 'fr-FR')}\n            </Table.Cell>\n            <Table.Cell>\n                <Progress percent={progress} progress indicating />\n            </Table.Cell>\n        </Table.Row>\n    );\n};\n\nclass OrderList extends React.Component {\n  state = { orders: [] };\n\n  componentWillMount() {\n      fetch('/graphql', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n              query: '{ orders { name orderId estimateDate progress } }',\n          }),\n      })\n          .then(data => data.json())\n          .then(({ data }) => this.setState({ orders: data.orders }));\n  }\n\n  render() {\n      const { orders } = this.state;\n\n      return (\n          <Table basic=\"very\" celled>\n              <Table.Header>\n                  <Table.Row>\n                      <Table.HeaderCell>Numéro de commande</Table.HeaderCell>\n                      <Table.HeaderCell>Nom de la commande</Table.HeaderCell>\n                      <Table.HeaderCell>Date de livraison estimée</Table.HeaderCell>\n                      <Table.HeaderCell>Progression</Table.HeaderCell>\n                  </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                  {orders\n                      ? orders\n                          .sort((a, b) => a.progress < b.progress)\n                          .map(order => <OrderRow key={order.orderId} {...order} />)\n                      : 'Loading'}\n              </Table.Body>\n          </Table>\n      );\n  }\n}\n\nconst App = () => (\n    <Container>\n        <Divider hidden />\n        <OrderList />\n    </Container>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './css/main.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}